import { NgModule } from "@angular/core";
import { MdlCommonsModule } from "./common/mdl-common.module";
import { MdlLayoutModule } from "./layout/mdl-layout.module";
import { MdlIconModule } from "./icon/mdl-icon.module";
import { MdlBadgeModule } from "./badge/mdl-badge.module";
import { MdlButtonModule } from "./button/mdl-button.module";
import { MdlCardModule } from "./card/mdl-card.module";
import { MdlCheckboxModule } from "./checkbox/mdl-checkbox.module";
import { MdlChipModule } from "./chips/mdl-chip.module";
import { MdlDialogModule } from "./dialog/mdl-dialog.module";
import { MdlDialogOutletModule } from "./dialog-outlet/mdl-dialog-outlet.module";
import { MdlIconToggleModule } from "./icon-toggle/mdl-icon-toggle.module";
import { MdlListModule } from "./list/mdl-list.module";
import { MdlMenuModule } from "./menu/mdl-menu.module";
import { MdlProgressModule } from "./progress/mdl-progress.module";
import { MdlRadioModule } from "./radio/mdl-radio.module";
import { MdlShadowModule } from "./shadow/mdl-shadow.module";
import { MdlSliderModule } from "./slider/mdl-slider.module";
import { MdlSnackbarModule } from "./snackbar/mdl-snackbar.module";
import { MdlSpinnerModule } from "./spinner/mdl-spinner.module";
import { MdlSwitchModule } from "./switch/mdl-switch.module";
import { MdlTableModule } from "./table/mdl-table.module";
import { MdlTabsModule } from "./tabs/mdl-tabs.module";
import { MdlTextFieldModule } from "./textfield/mdl-textfield.module";
import { MdlTooltipModule } from "./tooltip/mdl-tooltip.module";
import { MdlRippleModule } from "./ripple/mdl-ripple.module";
const MODULES = [
    MdlBadgeModule,
    MdlButtonModule,
    MdlCardModule,
    MdlCheckboxModule,
    MdlChipModule,
    MdlCommonsModule,
    MdlDialogModule,
    MdlDialogOutletModule,
    MdlIconModule,
    MdlIconToggleModule,
    MdlLayoutModule,
    MdlListModule,
    MdlMenuModule,
    MdlProgressModule,
    MdlRadioModule,
    MdlRippleModule,
    MdlShadowModule,
    MdlSliderModule,
    MdlSnackbarModule,
    MdlSpinnerModule,
    MdlSwitchModule,
    MdlTableModule,
    MdlTabsModule,
    MdlTextFieldModule,
    MdlTooltipModule,
];
export class MdlModule {
}
MdlModule.decorators = [
    { type: NgModule, args: [{
                declarations: [],
                imports: [
                    MdlButtonModule.forRoot(),
                    MdlLayoutModule.forRoot(),
                    MdlCheckboxModule.forRoot(),
                    MdlChipModule.forRoot(),
                    MdlDialogModule.forRoot(),
                    MdlDialogOutletModule.forRoot(),
                    MdlSpinnerModule.forRoot(),
                    MdlBadgeModule.forRoot(),
                    MdlShadowModule.forRoot(),
                    MdlCardModule.forRoot(),
                    MdlRadioModule.forRoot(),
                    MdlRippleModule.forRoot(),
                    MdlProgressModule.forRoot(),
                    MdlIconModule.forRoot(),
                    MdlIconToggleModule.forRoot(),
                    MdlListModule.forRoot(),
                    MdlSliderModule.forRoot(),
                    MdlSwitchModule.forRoot(),
                    MdlSnackbarModule.forRoot(),
                    MdlTooltipModule.forRoot(),
                    MdlTableModule.forRoot(),
                    MdlMenuModule.forRoot(),
                    MdlTabsModule.forRoot(),
                    MdlTextFieldModule.forRoot(),
                ],
                exports: [...MODULES],
            },] }
];
// @deprectaed use MdlModule - all services are provided in root by default.
export class MdlNonRootModule {
    static forRoot() {
        return { ngModule: MdlModule };
    }
}
MdlNonRootModule.decorators = [
    { type: NgModule, args: [{
                imports: MODULES,
                exports: MODULES,
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29yZS5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlL3NyYy9saWIvY29yZS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUF1QixRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDOUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQzdELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN2RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDMUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQzdELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN2RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNuRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDeEQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQzdELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDBDQUEwQyxDQUFDO0FBQ2pGLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQzNFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN2RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdkQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDbkUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQzFELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDN0QsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDbkUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDaEUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQzdELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdkQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDdEUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDaEUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRTdELE1BQU0sT0FBTyxHQUFHO0lBQ2QsY0FBYztJQUNkLGVBQWU7SUFDZixhQUFhO0lBQ2IsaUJBQWlCO0lBQ2pCLGFBQWE7SUFDYixnQkFBZ0I7SUFDaEIsZUFBZTtJQUNmLHFCQUFxQjtJQUNyQixhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLGVBQWU7SUFDZixhQUFhO0lBQ2IsYUFBYTtJQUNiLGlCQUFpQjtJQUNqQixjQUFjO0lBQ2QsZUFBZTtJQUNmLGVBQWU7SUFDZixlQUFlO0lBQ2YsaUJBQWlCO0lBQ2pCLGdCQUFnQjtJQUNoQixlQUFlO0lBQ2YsY0FBYztJQUNkLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIsZ0JBQWdCO0NBQ2pCLENBQUM7QUFnQ0YsTUFBTSxPQUFPLFNBQVM7OztZQTlCckIsUUFBUSxTQUFDO2dCQUNSLFlBQVksRUFBRSxFQUFFO2dCQUNoQixPQUFPLEVBQUU7b0JBQ1AsZUFBZSxDQUFDLE9BQU8sRUFBRTtvQkFDekIsZUFBZSxDQUFDLE9BQU8sRUFBRTtvQkFDekIsaUJBQWlCLENBQUMsT0FBTyxFQUFFO29CQUMzQixhQUFhLENBQUMsT0FBTyxFQUFFO29CQUN2QixlQUFlLENBQUMsT0FBTyxFQUFFO29CQUN6QixxQkFBcUIsQ0FBQyxPQUFPLEVBQUU7b0JBQy9CLGdCQUFnQixDQUFDLE9BQU8sRUFBRTtvQkFDMUIsY0FBYyxDQUFDLE9BQU8sRUFBRTtvQkFDeEIsZUFBZSxDQUFDLE9BQU8sRUFBRTtvQkFDekIsYUFBYSxDQUFDLE9BQU8sRUFBRTtvQkFDdkIsY0FBYyxDQUFDLE9BQU8sRUFBRTtvQkFDeEIsZUFBZSxDQUFDLE9BQU8sRUFBRTtvQkFDekIsaUJBQWlCLENBQUMsT0FBTyxFQUFFO29CQUMzQixhQUFhLENBQUMsT0FBTyxFQUFFO29CQUN2QixtQkFBbUIsQ0FBQyxPQUFPLEVBQUU7b0JBQzdCLGFBQWEsQ0FBQyxPQUFPLEVBQUU7b0JBQ3ZCLGVBQWUsQ0FBQyxPQUFPLEVBQUU7b0JBQ3pCLGVBQWUsQ0FBQyxPQUFPLEVBQUU7b0JBQ3pCLGlCQUFpQixDQUFDLE9BQU8sRUFBRTtvQkFDM0IsZ0JBQWdCLENBQUMsT0FBTyxFQUFFO29CQUMxQixjQUFjLENBQUMsT0FBTyxFQUFFO29CQUN4QixhQUFhLENBQUMsT0FBTyxFQUFFO29CQUN2QixhQUFhLENBQUMsT0FBTyxFQUFFO29CQUN2QixrQkFBa0IsQ0FBQyxPQUFPLEVBQUU7aUJBQzdCO2dCQUNELE9BQU8sRUFBRSxDQUFDLEdBQUcsT0FBTyxDQUFDO2FBQ3RCOztBQU9ELDRFQUE0RTtBQUM1RSxNQUFNLE9BQU8sZ0JBQWdCO0lBQzNCLE1BQU0sQ0FBQyxPQUFPO1FBQ1osT0FBTyxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsQ0FBQztJQUNqQyxDQUFDOzs7WUFSRixRQUFRLFNBQUM7Z0JBQ1IsT0FBTyxFQUFFLE9BQU87Z0JBQ2hCLE9BQU8sRUFBRSxPQUFPO2FBQ2pCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgTWRsQ29tbW9uc01vZHVsZSB9IGZyb20gXCIuL2NvbW1vbi9tZGwtY29tbW9uLm1vZHVsZVwiO1xuaW1wb3J0IHsgTWRsTGF5b3V0TW9kdWxlIH0gZnJvbSBcIi4vbGF5b3V0L21kbC1sYXlvdXQubW9kdWxlXCI7XG5pbXBvcnQgeyBNZGxJY29uTW9kdWxlIH0gZnJvbSBcIi4vaWNvbi9tZGwtaWNvbi5tb2R1bGVcIjtcbmltcG9ydCB7IE1kbEJhZGdlTW9kdWxlIH0gZnJvbSBcIi4vYmFkZ2UvbWRsLWJhZGdlLm1vZHVsZVwiO1xuaW1wb3J0IHsgTWRsQnV0dG9uTW9kdWxlIH0gZnJvbSBcIi4vYnV0dG9uL21kbC1idXR0b24ubW9kdWxlXCI7XG5pbXBvcnQgeyBNZGxDYXJkTW9kdWxlIH0gZnJvbSBcIi4vY2FyZC9tZGwtY2FyZC5tb2R1bGVcIjtcbmltcG9ydCB7IE1kbENoZWNrYm94TW9kdWxlIH0gZnJvbSBcIi4vY2hlY2tib3gvbWRsLWNoZWNrYm94Lm1vZHVsZVwiO1xuaW1wb3J0IHsgTWRsQ2hpcE1vZHVsZSB9IGZyb20gXCIuL2NoaXBzL21kbC1jaGlwLm1vZHVsZVwiO1xuaW1wb3J0IHsgTWRsRGlhbG9nTW9kdWxlIH0gZnJvbSBcIi4vZGlhbG9nL21kbC1kaWFsb2cubW9kdWxlXCI7XG5pbXBvcnQgeyBNZGxEaWFsb2dPdXRsZXRNb2R1bGUgfSBmcm9tIFwiLi9kaWFsb2ctb3V0bGV0L21kbC1kaWFsb2ctb3V0bGV0Lm1vZHVsZVwiO1xuaW1wb3J0IHsgTWRsSWNvblRvZ2dsZU1vZHVsZSB9IGZyb20gXCIuL2ljb24tdG9nZ2xlL21kbC1pY29uLXRvZ2dsZS5tb2R1bGVcIjtcbmltcG9ydCB7IE1kbExpc3RNb2R1bGUgfSBmcm9tIFwiLi9saXN0L21kbC1saXN0Lm1vZHVsZVwiO1xuaW1wb3J0IHsgTWRsTWVudU1vZHVsZSB9IGZyb20gXCIuL21lbnUvbWRsLW1lbnUubW9kdWxlXCI7XG5pbXBvcnQgeyBNZGxQcm9ncmVzc01vZHVsZSB9IGZyb20gXCIuL3Byb2dyZXNzL21kbC1wcm9ncmVzcy5tb2R1bGVcIjtcbmltcG9ydCB7IE1kbFJhZGlvTW9kdWxlIH0gZnJvbSBcIi4vcmFkaW8vbWRsLXJhZGlvLm1vZHVsZVwiO1xuaW1wb3J0IHsgTWRsU2hhZG93TW9kdWxlIH0gZnJvbSBcIi4vc2hhZG93L21kbC1zaGFkb3cubW9kdWxlXCI7XG5pbXBvcnQgeyBNZGxTbGlkZXJNb2R1bGUgfSBmcm9tIFwiLi9zbGlkZXIvbWRsLXNsaWRlci5tb2R1bGVcIjtcbmltcG9ydCB7IE1kbFNuYWNrYmFyTW9kdWxlIH0gZnJvbSBcIi4vc25hY2tiYXIvbWRsLXNuYWNrYmFyLm1vZHVsZVwiO1xuaW1wb3J0IHsgTWRsU3Bpbm5lck1vZHVsZSB9IGZyb20gXCIuL3NwaW5uZXIvbWRsLXNwaW5uZXIubW9kdWxlXCI7XG5pbXBvcnQgeyBNZGxTd2l0Y2hNb2R1bGUgfSBmcm9tIFwiLi9zd2l0Y2gvbWRsLXN3aXRjaC5tb2R1bGVcIjtcbmltcG9ydCB7IE1kbFRhYmxlTW9kdWxlIH0gZnJvbSBcIi4vdGFibGUvbWRsLXRhYmxlLm1vZHVsZVwiO1xuaW1wb3J0IHsgTWRsVGFic01vZHVsZSB9IGZyb20gXCIuL3RhYnMvbWRsLXRhYnMubW9kdWxlXCI7XG5pbXBvcnQgeyBNZGxUZXh0RmllbGRNb2R1bGUgfSBmcm9tIFwiLi90ZXh0ZmllbGQvbWRsLXRleHRmaWVsZC5tb2R1bGVcIjtcbmltcG9ydCB7IE1kbFRvb2x0aXBNb2R1bGUgfSBmcm9tIFwiLi90b29sdGlwL21kbC10b29sdGlwLm1vZHVsZVwiO1xuaW1wb3J0IHsgTWRsUmlwcGxlTW9kdWxlIH0gZnJvbSBcIi4vcmlwcGxlL21kbC1yaXBwbGUubW9kdWxlXCI7XG5cbmNvbnN0IE1PRFVMRVMgPSBbXG4gIE1kbEJhZGdlTW9kdWxlLFxuICBNZGxCdXR0b25Nb2R1bGUsXG4gIE1kbENhcmRNb2R1bGUsXG4gIE1kbENoZWNrYm94TW9kdWxlLFxuICBNZGxDaGlwTW9kdWxlLFxuICBNZGxDb21tb25zTW9kdWxlLFxuICBNZGxEaWFsb2dNb2R1bGUsXG4gIE1kbERpYWxvZ091dGxldE1vZHVsZSxcbiAgTWRsSWNvbk1vZHVsZSxcbiAgTWRsSWNvblRvZ2dsZU1vZHVsZSxcbiAgTWRsTGF5b3V0TW9kdWxlLFxuICBNZGxMaXN0TW9kdWxlLFxuICBNZGxNZW51TW9kdWxlLFxuICBNZGxQcm9ncmVzc01vZHVsZSxcbiAgTWRsUmFkaW9Nb2R1bGUsXG4gIE1kbFJpcHBsZU1vZHVsZSxcbiAgTWRsU2hhZG93TW9kdWxlLFxuICBNZGxTbGlkZXJNb2R1bGUsXG4gIE1kbFNuYWNrYmFyTW9kdWxlLFxuICBNZGxTcGlubmVyTW9kdWxlLFxuICBNZGxTd2l0Y2hNb2R1bGUsXG4gIE1kbFRhYmxlTW9kdWxlLFxuICBNZGxUYWJzTW9kdWxlLFxuICBNZGxUZXh0RmllbGRNb2R1bGUsXG4gIE1kbFRvb2x0aXBNb2R1bGUsXG5dO1xuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtdLFxuICBpbXBvcnRzOiBbXG4gICAgTWRsQnV0dG9uTW9kdWxlLmZvclJvb3QoKSxcbiAgICBNZGxMYXlvdXRNb2R1bGUuZm9yUm9vdCgpLFxuICAgIE1kbENoZWNrYm94TW9kdWxlLmZvclJvb3QoKSxcbiAgICBNZGxDaGlwTW9kdWxlLmZvclJvb3QoKSxcbiAgICBNZGxEaWFsb2dNb2R1bGUuZm9yUm9vdCgpLFxuICAgIE1kbERpYWxvZ091dGxldE1vZHVsZS5mb3JSb290KCksXG4gICAgTWRsU3Bpbm5lck1vZHVsZS5mb3JSb290KCksXG4gICAgTWRsQmFkZ2VNb2R1bGUuZm9yUm9vdCgpLFxuICAgIE1kbFNoYWRvd01vZHVsZS5mb3JSb290KCksXG4gICAgTWRsQ2FyZE1vZHVsZS5mb3JSb290KCksXG4gICAgTWRsUmFkaW9Nb2R1bGUuZm9yUm9vdCgpLFxuICAgIE1kbFJpcHBsZU1vZHVsZS5mb3JSb290KCksXG4gICAgTWRsUHJvZ3Jlc3NNb2R1bGUuZm9yUm9vdCgpLFxuICAgIE1kbEljb25Nb2R1bGUuZm9yUm9vdCgpLFxuICAgIE1kbEljb25Ub2dnbGVNb2R1bGUuZm9yUm9vdCgpLFxuICAgIE1kbExpc3RNb2R1bGUuZm9yUm9vdCgpLFxuICAgIE1kbFNsaWRlck1vZHVsZS5mb3JSb290KCksXG4gICAgTWRsU3dpdGNoTW9kdWxlLmZvclJvb3QoKSxcbiAgICBNZGxTbmFja2Jhck1vZHVsZS5mb3JSb290KCksXG4gICAgTWRsVG9vbHRpcE1vZHVsZS5mb3JSb290KCksXG4gICAgTWRsVGFibGVNb2R1bGUuZm9yUm9vdCgpLFxuICAgIE1kbE1lbnVNb2R1bGUuZm9yUm9vdCgpLFxuICAgIE1kbFRhYnNNb2R1bGUuZm9yUm9vdCgpLFxuICAgIE1kbFRleHRGaWVsZE1vZHVsZS5mb3JSb290KCksXG4gIF0sXG4gIGV4cG9ydHM6IFsuLi5NT0RVTEVTXSxcbn0pXG5leHBvcnQgY2xhc3MgTWRsTW9kdWxlIHt9XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IE1PRFVMRVMsXG4gIGV4cG9ydHM6IE1PRFVMRVMsXG59KVxuLy8gQGRlcHJlY3RhZWQgdXNlIE1kbE1vZHVsZSAtIGFsbCBzZXJ2aWNlcyBhcmUgcHJvdmlkZWQgaW4gcm9vdCBieSBkZWZhdWx0LlxuZXhwb3J0IGNsYXNzIE1kbE5vblJvb3RNb2R1bGUge1xuICBzdGF0aWMgZm9yUm9vdCgpOiBNb2R1bGVXaXRoUHJvdmlkZXJzPE1kbE1vZHVsZT4ge1xuICAgIHJldHVybiB7IG5nTW9kdWxlOiBNZGxNb2R1bGUgfTtcbiAgfVxufVxuIl19