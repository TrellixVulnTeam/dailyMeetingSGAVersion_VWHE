import { Injectable } from "@angular/core";
import { Subject } from "rxjs";
import * as i0 from "@angular/core";
export class MdlLayoutMediatorService {
    constructor() {
        this.tabMouseoverSubject = new Subject();
        this.tabMouseoutSubject = new Subject();
        this.tabSelectedSubject = new Subject();
    }
    onTabMouseover() {
        return this.tabMouseoverSubject.asObservable();
    }
    tabMouseover(tab) {
        this.tabMouseoverSubject.next(tab);
    }
    onTabMouseOut() {
        return this.tabMouseoutSubject.asObservable();
    }
    tabMouseout(tab) {
        this.tabMouseoutSubject.next(tab);
    }
    onTabSelected() {
        return this.tabSelectedSubject.asObservable();
    }
    tabSelected(tab) {
        this.tabSelectedSubject.next(tab);
    }
}
MdlLayoutMediatorService.ɵprov = i0.ɵɵdefineInjectable({ factory: function MdlLayoutMediatorService_Factory() { return new MdlLayoutMediatorService(); }, token: MdlLayoutMediatorService, providedIn: "root" });
MdlLayoutMediatorService.decorators = [
    { type: Injectable, args: [{
                providedIn: "root",
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWRsLWxheW91dC1tZWRpYXRvci5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZS9zcmMvbGliL2xheW91dC9tZGwtbGF5b3V0LW1lZGlhdG9yLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUzQyxPQUFPLEVBQWMsT0FBTyxFQUFFLE1BQU0sTUFBTSxDQUFDOztBQUszQyxNQUFNLE9BQU8sd0JBQXdCO0lBSHJDO1FBSVUsd0JBQW1CLEdBQUcsSUFBSSxPQUFPLEVBQThCLENBQUM7UUFDaEUsdUJBQWtCLEdBQUcsSUFBSSxPQUFPLEVBQThCLENBQUM7UUFDL0QsdUJBQWtCLEdBQUcsSUFBSSxPQUFPLEVBQThCLENBQUM7S0F5QnhFO0lBdkJDLGNBQWM7UUFDWixPQUFPLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUNqRCxDQUFDO0lBRUQsWUFBWSxDQUFDLEdBQStCO1FBQzFDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDckMsQ0FBQztJQUVELGFBQWE7UUFDWCxPQUFPLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUNoRCxDQUFDO0lBRUQsV0FBVyxDQUFDLEdBQStCO1FBQ3pDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDcEMsQ0FBQztJQUVELGFBQWE7UUFDWCxPQUFPLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUNoRCxDQUFDO0lBRUQsV0FBVyxDQUFDLEdBQStCO1FBQ3pDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDcEMsQ0FBQzs7OztZQTlCRixVQUFVLFNBQUM7Z0JBQ1YsVUFBVSxFQUFFLE1BQU07YUFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IE1kbExheW91dFRhYlBhbmVsQ29tcG9uZW50IH0gZnJvbSBcIi4vbWRsLWxheW91dC10YWItcGFuZWwuY29tcG9uZW50XCI7XG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBTdWJqZWN0IH0gZnJvbSBcInJ4anNcIjtcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiBcInJvb3RcIixcbn0pXG5leHBvcnQgY2xhc3MgTWRsTGF5b3V0TWVkaWF0b3JTZXJ2aWNlIHtcbiAgcHJpdmF0ZSB0YWJNb3VzZW92ZXJTdWJqZWN0ID0gbmV3IFN1YmplY3Q8TWRsTGF5b3V0VGFiUGFuZWxDb21wb25lbnQ+KCk7XG4gIHByaXZhdGUgdGFiTW91c2VvdXRTdWJqZWN0ID0gbmV3IFN1YmplY3Q8TWRsTGF5b3V0VGFiUGFuZWxDb21wb25lbnQ+KCk7XG4gIHByaXZhdGUgdGFiU2VsZWN0ZWRTdWJqZWN0ID0gbmV3IFN1YmplY3Q8TWRsTGF5b3V0VGFiUGFuZWxDb21wb25lbnQ+KCk7XG5cbiAgb25UYWJNb3VzZW92ZXIoKTogT2JzZXJ2YWJsZTxNZGxMYXlvdXRUYWJQYW5lbENvbXBvbmVudD4ge1xuICAgIHJldHVybiB0aGlzLnRhYk1vdXNlb3ZlclN1YmplY3QuYXNPYnNlcnZhYmxlKCk7XG4gIH1cblxuICB0YWJNb3VzZW92ZXIodGFiOiBNZGxMYXlvdXRUYWJQYW5lbENvbXBvbmVudCk6IHZvaWQge1xuICAgIHRoaXMudGFiTW91c2VvdmVyU3ViamVjdC5uZXh0KHRhYik7XG4gIH1cblxuICBvblRhYk1vdXNlT3V0KCk6IE9ic2VydmFibGU8TWRsTGF5b3V0VGFiUGFuZWxDb21wb25lbnQ+IHtcbiAgICByZXR1cm4gdGhpcy50YWJNb3VzZW91dFN1YmplY3QuYXNPYnNlcnZhYmxlKCk7XG4gIH1cblxuICB0YWJNb3VzZW91dCh0YWI6IE1kbExheW91dFRhYlBhbmVsQ29tcG9uZW50KTogdm9pZCB7XG4gICAgdGhpcy50YWJNb3VzZW91dFN1YmplY3QubmV4dCh0YWIpO1xuICB9XG5cbiAgb25UYWJTZWxlY3RlZCgpOiBPYnNlcnZhYmxlPE1kbExheW91dFRhYlBhbmVsQ29tcG9uZW50PiB7XG4gICAgcmV0dXJuIHRoaXMudGFiU2VsZWN0ZWRTdWJqZWN0LmFzT2JzZXJ2YWJsZSgpO1xuICB9XG5cbiAgdGFiU2VsZWN0ZWQodGFiOiBNZGxMYXlvdXRUYWJQYW5lbENvbXBvbmVudCk6IHZvaWQge1xuICAgIHRoaXMudGFiU2VsZWN0ZWRTdWJqZWN0Lm5leHQodGFiKTtcbiAgfVxufVxuIl19