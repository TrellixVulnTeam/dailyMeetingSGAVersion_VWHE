import { Component, ElementRef, HostBinding, HostListener, ViewEncapsulation, } from "@angular/core";
import { MdlLayoutMediatorService } from "./mdl-layout-mediator.service";
export class MdlLayoutHeaderComponent {
    constructor(elementRef, layoutMediatorService) {
        this.elementRef = elementRef;
        this.layoutMediatorService = layoutMediatorService;
        this.isSeamed = false;
        this.isLayoutHeader = true;
        this.isCompact = false;
        this.isAnimating = false;
        this.isRipple = true;
        this.el = elementRef.nativeElement;
    }
    get isWaterfall() {
        return this.mode === "waterfall";
    }
    get isCastingShadow() {
        return this.mode === "standard" || this.isCompact;
    }
    get isHeaderScroll() {
        return this.mode === "scroll";
    }
    onTransitionEnd() {
        this.isAnimating = false;
    }
    onClick() {
        if (this.isCompact) {
            this.isCompact = false;
            this.isAnimating = true;
        }
    }
    onTabMouseover(tab) {
        this.layoutMediatorService.tabMouseover(tab);
    }
    onTabMouseout(tab) {
        this.layoutMediatorService.tabMouseout(tab);
    }
    tabSelected(tab) {
        this.layoutMediatorService.tabSelected(tab);
    }
}
MdlLayoutHeaderComponent.decorators = [
    { type: Component, args: [{
                selector: "mdl-layout-header",
                template: `
    <ng-content></ng-content>
    <div
      *ngIf="tabs?.toArray()?.length > 0"
      class="mdl-layout__tab-bar-container"
    >
      <div class="mdl-layout__tab-bar is-casting-shadow">
        <div
          *ngFor="let tab of tabs.toArray()"
          class="mdl-layout__tab"
          [ngClass]="{ 'is-active': tab.isActive }"
          (mouseover)="onTabMouseover(tab)"
          (mouseout)="onTabMouseout(tab)"
        >
          <div
            *ngIf="tab.titleComponent"
            (click)="tabSelected(tab)"
            [mdl-ripple]="isRipple"
            [append-view-container-ref]="tab.titleComponent.vcRef"
          ></div>
          <a
            *ngIf="!tab.titleComponent"
            href="javascript:void(0)"
            (click)="tabSelected(tab)"
            class="mdl-layout__tab"
            [ngClass]="{ 'is-active': tab.isActive }"
            [mdl-ripple]="isRipple"
            >{{ tab.title }}</a
          >
        </div>
      </div>
    </div>
  `,
                encapsulation: ViewEncapsulation.None
            },] }
];
MdlLayoutHeaderComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: MdlLayoutMediatorService }
];
MdlLayoutHeaderComponent.propDecorators = {
    isSeamed: [{ type: HostBinding, args: ["class.mdl-layout__header--seamed",] }],
    isLayoutHeader: [{ type: HostBinding, args: ["class.mdl-layout__header",] }],
    isCompact: [{ type: HostBinding, args: ["class.is-compact",] }],
    isWaterfall: [{ type: HostBinding, args: ["class.mdl-layout__header--waterfall",] }],
    isCastingShadow: [{ type: HostBinding, args: ["class.is-casting-shadow",] }],
    isHeaderScroll: [{ type: HostBinding, args: ["class.mdl-layout__header--scroll",] }],
    onTransitionEnd: [{ type: HostListener, args: ["transitionend",] }],
    onClick: [{ type: HostListener, args: ["click",] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWRsLWxheW91dC1oZWFkZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZS9zcmMvbGliL2xheW91dC9tZGwtbGF5b3V0LWhlYWRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxVQUFVLEVBQ1YsV0FBVyxFQUNYLFlBQVksRUFFWixpQkFBaUIsR0FDbEIsTUFBTSxlQUFlLENBQUM7QUFFdkIsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUF1Q3pFLE1BQU0sT0FBTyx3QkFBd0I7SUFrQm5DLFlBQ1UsVUFBc0IsRUFDdEIscUJBQStDO1FBRC9DLGVBQVUsR0FBVixVQUFVLENBQVk7UUFDdEIsMEJBQXFCLEdBQXJCLHFCQUFxQixDQUEwQjtRQWxCekQsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUVqQixtQkFBYyxHQUFHLElBQUksQ0FBQztRQUV0QixjQUFTLEdBQUcsS0FBSyxDQUFDO1FBRWxCLGdCQUFXLEdBQUcsS0FBSyxDQUFDO1FBRXBCLGFBQVEsR0FBRyxJQUFJLENBQUM7UUFZZCxJQUFJLENBQUMsRUFBRSxHQUFHLFVBQVUsQ0FBQyxhQUFhLENBQUM7SUFDckMsQ0FBQztJQUVELElBQ0ksV0FBVztRQUNiLE9BQU8sSUFBSSxDQUFDLElBQUksS0FBSyxXQUFXLENBQUM7SUFDbkMsQ0FBQztJQUVELElBQTRDLGVBQWU7UUFDekQsT0FBTyxJQUFJLENBQUMsSUFBSSxLQUFLLFVBQVUsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQ3BELENBQUM7SUFFRCxJQUNJLGNBQWM7UUFDaEIsT0FBTyxJQUFJLENBQUMsSUFBSSxLQUFLLFFBQVEsQ0FBQztJQUNoQyxDQUFDO0lBR0QsZUFBZTtRQUNiLElBQUksQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDO0lBQzNCLENBQUM7SUFHRCxPQUFPO1FBQ0wsSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ2xCLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO1NBQ3pCO0lBQ0gsQ0FBQztJQUVELGNBQWMsQ0FBQyxHQUErQjtRQUM1QyxJQUFJLENBQUMscUJBQXFCLENBQUMsWUFBWSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQy9DLENBQUM7SUFFRCxhQUFhLENBQUMsR0FBK0I7UUFDM0MsSUFBSSxDQUFDLHFCQUFxQixDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUM5QyxDQUFDO0lBRUQsV0FBVyxDQUFDLEdBQStCO1FBQ3pDLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDOUMsQ0FBQzs7O1lBbkdGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsbUJBQW1CO2dCQUM3QixRQUFRLEVBQUU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBZ0NUO2dCQUNELGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO2FBQ3RDOzs7WUE3Q0MsVUFBVTtZQU9ILHdCQUF3Qjs7O3VCQXdDOUIsV0FBVyxTQUFDLGtDQUFrQzs2QkFFOUMsV0FBVyxTQUFDLDBCQUEwQjt3QkFFdEMsV0FBVyxTQUFDLGtCQUFrQjswQkFvQjlCLFdBQVcsU0FBQyxxQ0FBcUM7OEJBS2pELFdBQVcsU0FBQyx5QkFBeUI7NkJBSXJDLFdBQVcsU0FBQyxrQ0FBa0M7OEJBSzlDLFlBQVksU0FBQyxlQUFlO3NCQUs1QixZQUFZLFNBQUMsT0FBTyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgRWxlbWVudFJlZixcbiAgSG9zdEJpbmRpbmcsXG4gIEhvc3RMaXN0ZW5lcixcbiAgUXVlcnlMaXN0LFxuICBWaWV3RW5jYXBzdWxhdGlvbixcbn0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IE1kbExheW91dFRhYlBhbmVsQ29tcG9uZW50IH0gZnJvbSBcIi4vbWRsLWxheW91dC10YWItcGFuZWwuY29tcG9uZW50XCI7XG5pbXBvcnQgeyBNZGxMYXlvdXRNZWRpYXRvclNlcnZpY2UgfSBmcm9tIFwiLi9tZGwtbGF5b3V0LW1lZGlhdG9yLnNlcnZpY2VcIjtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiBcIm1kbC1sYXlvdXQtaGVhZGVyXCIsXG4gIHRlbXBsYXRlOiBgXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICAgIDxkaXZcbiAgICAgICpuZ0lmPVwidGFicz8udG9BcnJheSgpPy5sZW5ndGggPiAwXCJcbiAgICAgIGNsYXNzPVwibWRsLWxheW91dF9fdGFiLWJhci1jb250YWluZXJcIlxuICAgID5cbiAgICAgIDxkaXYgY2xhc3M9XCJtZGwtbGF5b3V0X190YWItYmFyIGlzLWNhc3Rpbmctc2hhZG93XCI+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICAqbmdGb3I9XCJsZXQgdGFiIG9mIHRhYnMudG9BcnJheSgpXCJcbiAgICAgICAgICBjbGFzcz1cIm1kbC1sYXlvdXRfX3RhYlwiXG4gICAgICAgICAgW25nQ2xhc3NdPVwieyAnaXMtYWN0aXZlJzogdGFiLmlzQWN0aXZlIH1cIlxuICAgICAgICAgIChtb3VzZW92ZXIpPVwib25UYWJNb3VzZW92ZXIodGFiKVwiXG4gICAgICAgICAgKG1vdXNlb3V0KT1cIm9uVGFiTW91c2VvdXQodGFiKVwiXG4gICAgICAgID5cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAqbmdJZj1cInRhYi50aXRsZUNvbXBvbmVudFwiXG4gICAgICAgICAgICAoY2xpY2spPVwidGFiU2VsZWN0ZWQodGFiKVwiXG4gICAgICAgICAgICBbbWRsLXJpcHBsZV09XCJpc1JpcHBsZVwiXG4gICAgICAgICAgICBbYXBwZW5kLXZpZXctY29udGFpbmVyLXJlZl09XCJ0YWIudGl0bGVDb21wb25lbnQudmNSZWZcIlxuICAgICAgICAgID48L2Rpdj5cbiAgICAgICAgICA8YVxuICAgICAgICAgICAgKm5nSWY9XCIhdGFiLnRpdGxlQ29tcG9uZW50XCJcbiAgICAgICAgICAgIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMClcIlxuICAgICAgICAgICAgKGNsaWNrKT1cInRhYlNlbGVjdGVkKHRhYilcIlxuICAgICAgICAgICAgY2xhc3M9XCJtZGwtbGF5b3V0X190YWJcIlxuICAgICAgICAgICAgW25nQ2xhc3NdPVwieyAnaXMtYWN0aXZlJzogdGFiLmlzQWN0aXZlIH1cIlxuICAgICAgICAgICAgW21kbC1yaXBwbGVdPVwiaXNSaXBwbGVcIlxuICAgICAgICAgICAgPnt7IHRhYi50aXRsZSB9fTwvYVxuICAgICAgICAgID5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgYCxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbn0pXG5leHBvcnQgY2xhc3MgTWRsTGF5b3V0SGVhZGVyQ29tcG9uZW50IHtcbiAgQEhvc3RCaW5kaW5nKFwiY2xhc3MubWRsLWxheW91dF9faGVhZGVyLS1zZWFtZWRcIilcbiAgaXNTZWFtZWQgPSBmYWxzZTtcbiAgQEhvc3RCaW5kaW5nKFwiY2xhc3MubWRsLWxheW91dF9faGVhZGVyXCIpXG4gIGlzTGF5b3V0SGVhZGVyID0gdHJ1ZTtcbiAgQEhvc3RCaW5kaW5nKFwiY2xhc3MuaXMtY29tcGFjdFwiKVxuICBpc0NvbXBhY3QgPSBmYWxzZTtcblxuICBpc0FuaW1hdGluZyA9IGZhbHNlO1xuXG4gIGlzUmlwcGxlID0gdHJ1ZTtcbiAgLy8gc2V0IGZyb20gTWRsTGF5b3V0Q29tcG9uZW50XG4gIG1vZGU6IHN0cmluZztcbiAgZWw6IEhUTUxFbGVtZW50O1xuXG4gIC8vIHdpbGwgYmUgc2V0IGZyb20gbWRsbGF5b3V0Y29tcG9uZW50XG4gIHRhYnM6IFF1ZXJ5TGlzdDxNZGxMYXlvdXRUYWJQYW5lbENvbXBvbmVudD47XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBlbGVtZW50UmVmOiBFbGVtZW50UmVmLFxuICAgIHByaXZhdGUgbGF5b3V0TWVkaWF0b3JTZXJ2aWNlOiBNZGxMYXlvdXRNZWRpYXRvclNlcnZpY2VcbiAgKSB7XG4gICAgdGhpcy5lbCA9IGVsZW1lbnRSZWYubmF0aXZlRWxlbWVudDtcbiAgfVxuXG4gIEBIb3N0QmluZGluZyhcImNsYXNzLm1kbC1sYXlvdXRfX2hlYWRlci0td2F0ZXJmYWxsXCIpXG4gIGdldCBpc1dhdGVyZmFsbCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5tb2RlID09PSBcIndhdGVyZmFsbFwiO1xuICB9XG5cbiAgQEhvc3RCaW5kaW5nKFwiY2xhc3MuaXMtY2FzdGluZy1zaGFkb3dcIikgZ2V0IGlzQ2FzdGluZ1NoYWRvdygpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5tb2RlID09PSBcInN0YW5kYXJkXCIgfHwgdGhpcy5pc0NvbXBhY3Q7XG4gIH1cblxuICBASG9zdEJpbmRpbmcoXCJjbGFzcy5tZGwtbGF5b3V0X19oZWFkZXItLXNjcm9sbFwiKVxuICBnZXQgaXNIZWFkZXJTY3JvbGwoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMubW9kZSA9PT0gXCJzY3JvbGxcIjtcbiAgfVxuXG4gIEBIb3N0TGlzdGVuZXIoXCJ0cmFuc2l0aW9uZW5kXCIpXG4gIG9uVHJhbnNpdGlvbkVuZCgpOiB2b2lkIHtcbiAgICB0aGlzLmlzQW5pbWF0aW5nID0gZmFsc2U7XG4gIH1cblxuICBASG9zdExpc3RlbmVyKFwiY2xpY2tcIilcbiAgb25DbGljaygpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5pc0NvbXBhY3QpIHtcbiAgICAgIHRoaXMuaXNDb21wYWN0ID0gZmFsc2U7XG4gICAgICB0aGlzLmlzQW5pbWF0aW5nID0gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICBvblRhYk1vdXNlb3Zlcih0YWI6IE1kbExheW91dFRhYlBhbmVsQ29tcG9uZW50KTogdm9pZCB7XG4gICAgdGhpcy5sYXlvdXRNZWRpYXRvclNlcnZpY2UudGFiTW91c2VvdmVyKHRhYik7XG4gIH1cblxuICBvblRhYk1vdXNlb3V0KHRhYjogTWRsTGF5b3V0VGFiUGFuZWxDb21wb25lbnQpOiB2b2lkIHtcbiAgICB0aGlzLmxheW91dE1lZGlhdG9yU2VydmljZS50YWJNb3VzZW91dCh0YWIpO1xuICB9XG5cbiAgdGFiU2VsZWN0ZWQodGFiOiBNZGxMYXlvdXRUYWJQYW5lbENvbXBvbmVudCk6IHZvaWQge1xuICAgIHRoaXMubGF5b3V0TWVkaWF0b3JTZXJ2aWNlLnRhYlNlbGVjdGVkKHRhYik7XG4gIH1cbn1cbiJdfQ==