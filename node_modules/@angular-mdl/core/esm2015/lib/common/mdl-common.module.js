import { NgModule } from "@angular/core";
import { AppendViewContainerRefDirective } from "./append-view-container-ref-directive";
import { Animations, NativeWebAnimations, NoopWebAnimations, } from "./animations";
// eslint-disable-next-line prefer-arrow/prefer-arrow-functions
function isWebAnimationsSupported() {
    return (typeof Element !== "undefined" &&
        typeof Element.prototype.animate === "function");
}
// eslint-disable-next-line prefer-arrow/prefer-arrow-functions
export function instantiateSupportedAnimationDriver() {
    /* istanbul ignore next */
    if (isWebAnimationsSupported()) {
        return new NativeWebAnimations();
    }
    /* istanbul ignore next */
    return new NoopWebAnimations();
}
export class MdlCommonsModule {
}
MdlCommonsModule.decorators = [
    { type: NgModule, args: [{
                imports: [],
                exports: [AppendViewContainerRefDirective],
                declarations: [AppendViewContainerRefDirective],
                providers: [
                    { provide: Animations, useFactory: instantiateSupportedAnimationDriver },
                ],
            },] }
];
export * from "./animations";
export * from "./boolean-property";
export * from "./mdl-error";
export * from "./append-view-container-ref-directive";
export * from "./native-support";
export * from "./noop";
export * from "./number.property";
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWRsLWNvbW1vbi5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlL3NyYy9saWIvY29tbW9uL21kbC1jb21tb24ubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLCtCQUErQixFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFDeEYsT0FBTyxFQUNMLFVBQVUsRUFDVixtQkFBbUIsRUFDbkIsaUJBQWlCLEdBQ2xCLE1BQU0sY0FBYyxDQUFDO0FBRXRCLCtEQUErRDtBQUMvRCxTQUFTLHdCQUF3QjtJQUMvQixPQUFPLENBQ0wsT0FBTyxPQUFPLEtBQUssV0FBVztRQUM5QixPQUFPLE9BQU8sQ0FBQyxTQUFTLENBQUMsT0FBTyxLQUFLLFVBQVUsQ0FDaEQsQ0FBQztBQUNKLENBQUM7QUFFRCwrREFBK0Q7QUFDL0QsTUFBTSxVQUFVLG1DQUFtQztJQUNqRCwwQkFBMEI7SUFDMUIsSUFBSSx3QkFBd0IsRUFBRSxFQUFFO1FBQzlCLE9BQU8sSUFBSSxtQkFBbUIsRUFBRSxDQUFDO0tBQ2xDO0lBQ0QsMEJBQTBCO0lBQzFCLE9BQU8sSUFBSSxpQkFBaUIsRUFBRSxDQUFDO0FBQ2pDLENBQUM7QUFVRCxNQUFNLE9BQU8sZ0JBQWdCOzs7WUFSNUIsUUFBUSxTQUFDO2dCQUNSLE9BQU8sRUFBRSxFQUFFO2dCQUNYLE9BQU8sRUFBRSxDQUFDLCtCQUErQixDQUFDO2dCQUMxQyxZQUFZLEVBQUUsQ0FBQywrQkFBK0IsQ0FBQztnQkFDL0MsU0FBUyxFQUFFO29CQUNULEVBQUUsT0FBTyxFQUFFLFVBQVUsRUFBRSxVQUFVLEVBQUUsbUNBQW1DLEVBQUU7aUJBQ3pFO2FBQ0Y7O0FBR0QsY0FBYyxjQUFjLENBQUM7QUFDN0IsY0FBYyxvQkFBb0IsQ0FBQztBQUNuQyxjQUFjLGFBQWEsQ0FBQztBQUM1QixjQUFjLHVDQUF1QyxDQUFDO0FBQ3RELGNBQWMsa0JBQWtCLENBQUM7QUFDakMsY0FBYyxRQUFRLENBQUM7QUFDdkIsY0FBYyxtQkFBbUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IEFwcGVuZFZpZXdDb250YWluZXJSZWZEaXJlY3RpdmUgfSBmcm9tIFwiLi9hcHBlbmQtdmlldy1jb250YWluZXItcmVmLWRpcmVjdGl2ZVwiO1xuaW1wb3J0IHtcbiAgQW5pbWF0aW9ucyxcbiAgTmF0aXZlV2ViQW5pbWF0aW9ucyxcbiAgTm9vcFdlYkFuaW1hdGlvbnMsXG59IGZyb20gXCIuL2FuaW1hdGlvbnNcIjtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1hcnJvdy9wcmVmZXItYXJyb3ctZnVuY3Rpb25zXG5mdW5jdGlvbiBpc1dlYkFuaW1hdGlvbnNTdXBwb3J0ZWQoKSB7XG4gIHJldHVybiAoXG4gICAgdHlwZW9mIEVsZW1lbnQgIT09IFwidW5kZWZpbmVkXCIgJiZcbiAgICB0eXBlb2YgRWxlbWVudC5wcm90b3R5cGUuYW5pbWF0ZSA9PT0gXCJmdW5jdGlvblwiXG4gICk7XG59XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItYXJyb3cvcHJlZmVyLWFycm93LWZ1bmN0aW9uc1xuZXhwb3J0IGZ1bmN0aW9uIGluc3RhbnRpYXRlU3VwcG9ydGVkQW5pbWF0aW9uRHJpdmVyKCk6IEFuaW1hdGlvbnMge1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICBpZiAoaXNXZWJBbmltYXRpb25zU3VwcG9ydGVkKCkpIHtcbiAgICByZXR1cm4gbmV3IE5hdGl2ZVdlYkFuaW1hdGlvbnMoKTtcbiAgfVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICByZXR1cm4gbmV3IE5vb3BXZWJBbmltYXRpb25zKCk7XG59XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtdLFxuICBleHBvcnRzOiBbQXBwZW5kVmlld0NvbnRhaW5lclJlZkRpcmVjdGl2ZV0sXG4gIGRlY2xhcmF0aW9uczogW0FwcGVuZFZpZXdDb250YWluZXJSZWZEaXJlY3RpdmVdLFxuICBwcm92aWRlcnM6IFtcbiAgICB7IHByb3ZpZGU6IEFuaW1hdGlvbnMsIHVzZUZhY3Rvcnk6IGluc3RhbnRpYXRlU3VwcG9ydGVkQW5pbWF0aW9uRHJpdmVyIH0sXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIE1kbENvbW1vbnNNb2R1bGUge31cblxuZXhwb3J0ICogZnJvbSBcIi4vYW5pbWF0aW9uc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vYm9vbGVhbi1wcm9wZXJ0eVwiO1xuZXhwb3J0ICogZnJvbSBcIi4vbWRsLWVycm9yXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9hcHBlbmQtdmlldy1jb250YWluZXItcmVmLWRpcmVjdGl2ZVwiO1xuZXhwb3J0ICogZnJvbSBcIi4vbmF0aXZlLXN1cHBvcnRcIjtcbmV4cG9ydCAqIGZyb20gXCIuL25vb3BcIjtcbmV4cG9ydCAqIGZyb20gXCIuL251bWJlci5wcm9wZXJ0eVwiO1xuIl19