import { Component, Directive, HostBinding, Optional, ViewEncapsulation, } from "@angular/core";
import { MdlStructureError } from "../common/mdl-error";
export class MdlCardComponent {
    constructor() {
        this.isCard = true;
    }
}
MdlCardComponent.decorators = [
    { type: Component, args: [{
                selector: "mdl-card",
                template: "<ng-content></ng-content>",
                encapsulation: ViewEncapsulation.None
            },] }
];
MdlCardComponent.propDecorators = {
    isCard: [{ type: HostBinding, args: ["class.mdl-card",] }]
};
// eslint-disable-next-line @angular-eslint/directive-class-suffix
export class MdlCardChildStructure {
    constructor(mdlCardComponent, childComponentName) {
        this.mdlCardComponent = mdlCardComponent;
        this.childComponentName = childComponentName;
    }
    ngOnInit() {
        if (this.mdlCardComponent === null) {
            throw new MdlStructureError(this.childComponentName, "mdl-card");
        }
    }
}
MdlCardChildStructure.decorators = [
    { type: Directive }
];
MdlCardChildStructure.ctorParameters = () => [
    { type: MdlCardComponent },
    { type: String }
];
export class MdlCardTitleComponent extends MdlCardChildStructure {
    constructor(mdlCardComponent) {
        super(mdlCardComponent, "mdl-card-title");
        this.isCardTitle = true;
    }
}
MdlCardTitleComponent.decorators = [
    { type: Component, args: [{
                selector: "mdl-card-title",
                template: "<ng-content></ng-content>",
                encapsulation: ViewEncapsulation.None
            },] }
];
MdlCardTitleComponent.ctorParameters = () => [
    { type: MdlCardComponent, decorators: [{ type: Optional }] }
];
MdlCardTitleComponent.propDecorators = {
    isCardTitle: [{ type: HostBinding, args: ["class.mdl-card__title",] }]
};
export class MdlCardSupportingTextComponent extends MdlCardChildStructure {
    constructor(mdlCardComponent) {
        super(mdlCardComponent, "mdl-card-supporting-text");
        this.isSupportingText = true;
    }
}
MdlCardSupportingTextComponent.decorators = [
    { type: Component, args: [{
                selector: "mdl-card-supporting-text",
                template: "<ng-content></ng-content>",
                encapsulation: ViewEncapsulation.None
            },] }
];
MdlCardSupportingTextComponent.ctorParameters = () => [
    { type: MdlCardComponent, decorators: [{ type: Optional }] }
];
MdlCardSupportingTextComponent.propDecorators = {
    isSupportingText: [{ type: HostBinding, args: ["class.mdl-card__supporting-text",] }]
};
export class MdlCardMediaComponent extends MdlCardChildStructure {
    constructor(mdlCardComponent) {
        super(mdlCardComponent, "mdl-card-media");
        this.isCardMedia = true;
    }
}
MdlCardMediaComponent.decorators = [
    { type: Component, args: [{
                selector: "mdl-card-media",
                template: "<ng-content></ng-content>",
                encapsulation: ViewEncapsulation.None
            },] }
];
MdlCardMediaComponent.ctorParameters = () => [
    { type: MdlCardComponent, decorators: [{ type: Optional }] }
];
MdlCardMediaComponent.propDecorators = {
    isCardMedia: [{ type: HostBinding, args: ["class.mdl-card__media",] }]
};
export class MdlCardActionsComponent extends MdlCardChildStructure {
    constructor(mdlCardComponent) {
        super(mdlCardComponent, "mdl-card-actions");
        this.isCardAction = true;
    }
}
MdlCardActionsComponent.decorators = [
    { type: Component, args: [{
                selector: "mdl-card-actions",
                template: "<ng-content></ng-content>",
                encapsulation: ViewEncapsulation.None
            },] }
];
MdlCardActionsComponent.ctorParameters = () => [
    { type: MdlCardComponent, decorators: [{ type: Optional }] }
];
MdlCardActionsComponent.propDecorators = {
    isCardAction: [{ type: HostBinding, args: ["class.mdl-card__actions",] }]
};
export class MdlCardMenuComponent extends MdlCardChildStructure {
    constructor(mdlCardComponent) {
        super(mdlCardComponent, "mdl-card-menu");
        this.isCardMenu = true;
    }
}
MdlCardMenuComponent.decorators = [
    { type: Component, args: [{
                selector: "mdl-card-menu",
                template: "<ng-content></ng-content>",
                encapsulation: ViewEncapsulation.None
            },] }
];
MdlCardMenuComponent.ctorParameters = () => [
    { type: MdlCardComponent, decorators: [{ type: Optional }] }
];
MdlCardMenuComponent.propDecorators = {
    isCardMenu: [{ type: HostBinding, args: ["class.mdl-card__menu",] }]
};
export class MdlCardTitleTextDirective {
    constructor() {
        this.isCardTitleText = true;
    }
}
MdlCardTitleTextDirective.decorators = [
    { type: Directive, args: [{
                // eslint-disable-next-line
                selector: '[mdl-card-title-text]'
            },] }
];
MdlCardTitleTextDirective.propDecorators = {
    isCardTitleText: [{ type: HostBinding, args: ["class.mdl-card__title-text",] }]
};
export class MdlCardBorderDirective {
    constructor() {
        this.isCardBorder = true;
    }
}
MdlCardBorderDirective.decorators = [
    { type: Directive, args: [{
                // eslint-disable-next-line
                selector: '[mdl-card-border]'
            },] }
];
MdlCardBorderDirective.propDecorators = {
    isCardBorder: [{ type: HostBinding, args: ["class.mdl-card--border",] }]
};
export class MdlCardExpandDirective {
    constructor() {
        this.isCardExpand = true;
    }
}
MdlCardExpandDirective.decorators = [
    { type: Directive, args: [{
                // eslint-disable-next-line
                selector: '[mdl-card-expand]'
            },] }
];
MdlCardExpandDirective.propDecorators = {
    isCardExpand: [{ type: HostBinding, args: ["class.mdl-card--expand",] }]
};
//# sourceMappingURL=data:application/json;base64,