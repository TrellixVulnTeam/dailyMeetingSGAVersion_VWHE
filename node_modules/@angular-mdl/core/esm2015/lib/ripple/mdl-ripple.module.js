import { NgModule } from "@angular/core";
import { MdlAnchorRippleDirective, MdlButtonRippleDirective, MdlCheckboxRippleDirective, MdlIconToggleRippleDirective, MdlMenuItemRippleDirective, MdlRadioRippleDirective, MdlSwitchRippleDirective, } from "./mdl-ripple.directive";
const MDL_RIPPLE_DIRECTIVES = [
    MdlCheckboxRippleDirective,
    MdlButtonRippleDirective,
    MdlRadioRippleDirective,
    MdlIconToggleRippleDirective,
    MdlSwitchRippleDirective,
    MdlMenuItemRippleDirective,
    MdlAnchorRippleDirective,
];
export class MdlRippleModule {
    static forRoot() {
        return {
            ngModule: MdlRippleModule,
            providers: [],
        };
    }
}
MdlRippleModule.decorators = [
    { type: NgModule, args: [{
                imports: [],
                exports: MDL_RIPPLE_DIRECTIVES,
                declarations: MDL_RIPPLE_DIRECTIVES,
            },] }
];
export * from "../ripple/mdl-ripple.directive";
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWRsLXJpcHBsZS5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlL3NyYy9saWIvcmlwcGxlL21kbC1yaXBwbGUubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBdUIsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFDTCx3QkFBd0IsRUFDeEIsd0JBQXdCLEVBQ3hCLDBCQUEwQixFQUMxQiw0QkFBNEIsRUFDNUIsMEJBQTBCLEVBQzFCLHVCQUF1QixFQUN2Qix3QkFBd0IsR0FDekIsTUFBTSx3QkFBd0IsQ0FBQztBQUVoQyxNQUFNLHFCQUFxQixHQUFHO0lBQzVCLDBCQUEwQjtJQUMxQix3QkFBd0I7SUFDeEIsdUJBQXVCO0lBQ3ZCLDRCQUE0QjtJQUM1Qix3QkFBd0I7SUFDeEIsMEJBQTBCO0lBQzFCLHdCQUF3QjtDQUN6QixDQUFDO0FBT0YsTUFBTSxPQUFPLGVBQWU7SUFDbkIsTUFBTSxDQUFDLE9BQU87UUFDbkIsT0FBTztZQUNMLFFBQVEsRUFBRSxlQUFlO1lBQ3pCLFNBQVMsRUFBRSxFQUFFO1NBQ2QsQ0FBQztJQUNKLENBQUM7OztZQVhGLFFBQVEsU0FBQztnQkFDUixPQUFPLEVBQUUsRUFBRTtnQkFDWCxPQUFPLEVBQUUscUJBQXFCO2dCQUM5QixZQUFZLEVBQUUscUJBQXFCO2FBQ3BDOztBQVVELGNBQWMsZ0NBQWdDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZSB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQge1xuICBNZGxBbmNob3JSaXBwbGVEaXJlY3RpdmUsXG4gIE1kbEJ1dHRvblJpcHBsZURpcmVjdGl2ZSxcbiAgTWRsQ2hlY2tib3hSaXBwbGVEaXJlY3RpdmUsXG4gIE1kbEljb25Ub2dnbGVSaXBwbGVEaXJlY3RpdmUsXG4gIE1kbE1lbnVJdGVtUmlwcGxlRGlyZWN0aXZlLFxuICBNZGxSYWRpb1JpcHBsZURpcmVjdGl2ZSxcbiAgTWRsU3dpdGNoUmlwcGxlRGlyZWN0aXZlLFxufSBmcm9tIFwiLi9tZGwtcmlwcGxlLmRpcmVjdGl2ZVwiO1xuXG5jb25zdCBNRExfUklQUExFX0RJUkVDVElWRVMgPSBbXG4gIE1kbENoZWNrYm94UmlwcGxlRGlyZWN0aXZlLFxuICBNZGxCdXR0b25SaXBwbGVEaXJlY3RpdmUsXG4gIE1kbFJhZGlvUmlwcGxlRGlyZWN0aXZlLFxuICBNZGxJY29uVG9nZ2xlUmlwcGxlRGlyZWN0aXZlLFxuICBNZGxTd2l0Y2hSaXBwbGVEaXJlY3RpdmUsXG4gIE1kbE1lbnVJdGVtUmlwcGxlRGlyZWN0aXZlLFxuICBNZGxBbmNob3JSaXBwbGVEaXJlY3RpdmUsXG5dO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbXSxcbiAgZXhwb3J0czogTURMX1JJUFBMRV9ESVJFQ1RJVkVTLFxuICBkZWNsYXJhdGlvbnM6IE1ETF9SSVBQTEVfRElSRUNUSVZFUyxcbn0pXG5leHBvcnQgY2xhc3MgTWRsUmlwcGxlTW9kdWxlIHtcbiAgcHVibGljIHN0YXRpYyBmb3JSb290KCk6IE1vZHVsZVdpdGhQcm92aWRlcnM8TWRsUmlwcGxlTW9kdWxlPiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBNZGxSaXBwbGVNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtdLFxuICAgIH07XG4gIH1cbn1cblxuZXhwb3J0ICogZnJvbSBcIi4uL3JpcHBsZS9tZGwtcmlwcGxlLmRpcmVjdGl2ZVwiO1xuIl19