import { ElementRef, EventEmitter, OnDestroy, OnInit, Renderer2 } from "@angular/core";
import { ControlValueAccessor, FormGroupName } from "@angular/forms";
export declare class MdlRadioGroupRegisty {
    private defaultFormGroup;
    private radioComponents;
    add(radioComponent: MdlRadioComponent, formGroupName: FormGroupName): void;
    remove(radioComponent: MdlRadioComponent): void;
    select(radioComponent: MdlRadioComponent, formGroupName: FormGroupName): void;
}
export declare class MdlRadioComponent implements ControlValueAccessor, OnInit, OnDestroy {
    private elementRef;
    private renderer;
    private radioGroupRegistry;
    private formGroupName;
    name: string;
    formControlName: string;
    value: unknown;
    tabindex: any;
    change: EventEmitter<unknown>;
    checked: boolean;
    isUpgraded: boolean;
    isRadio: boolean;
    optionValue: unknown;
    private readonly el;
    private onTouchedCallback;
    private onChangeCallback;
    private disabledIntern;
    constructor(elementRef: ElementRef, renderer: Renderer2, radioGroupRegistry: MdlRadioGroupRegisty, formGroupName: FormGroupName);
    get disabled(): boolean;
    set disabled(value: boolean);
    onClick(): void;
    ngOnInit(): void;
    ngOnDestroy(): void;
    writeValue(optionValue: unknown): void;
    deselect(value: unknown): void;
    registerOnChange(fn: (v: unknown) => unknown): void;
    registerOnTouched(fn: () => unknown): void;
    setDisabledState(isDisabled: boolean): void;
    onFocus(): void;
    onBlur(): void;
    spaceKeyPress(): void;
    private updateCheckState;
    private checkName;
}
