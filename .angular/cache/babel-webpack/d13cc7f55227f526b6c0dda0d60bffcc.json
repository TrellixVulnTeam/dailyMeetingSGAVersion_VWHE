{"ast":null,"code":"import { FormGroup } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service\";\nimport * as i2 from \"../users-list.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\n\nfunction NewAppUserComponent_form_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 1, 2);\n    i0.ɵɵlistener(\"submit\", function NewAppUserComponent_form_0_Template_form_submit_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.createNewUser();\n    });\n    i0.ɵɵelementStart(2, \"div\");\n    i0.ɵɵtext(3, \" Nom : \");\n    i0.ɵɵelementStart(4, \"input\", 3);\n    i0.ɵɵlistener(\"ngModelChange\", function NewAppUserComponent_form_0_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.user.nom = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 4);\n    i0.ɵɵtext(6, \" Ajouter \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.user.nom);\n  }\n}\n\nexport let NewAppUserComponent = /*#__PURE__*/(() => {\n  class NewAppUserComponent {\n    constructor(service, userlistservice) {\n      this.service = service;\n      this.userlistservice = userlistservice;\n      this.user = {};\n      this.nom = \"\";\n      this.form = new FormGroup({});\n      this.model = {};\n      this.options = {};\n      this.fields = [{\n        key: 'Input',\n        type: 'input',\n        templateOptions: {\n          label: 'new participant',\n          placeholder: 'name',\n          description: 'here to insert a new participant in the list',\n          required: true\n        }\n      }];\n    }\n\n    ngOnInit() {}\n\n    createNewUser() {\n      // id max\n      //console.log(f.value)\n      // @ts-ignore\n      this.nom = this.user.nom;\n      console.log(this.user.nom);\n      let list = this.userlistservice.appUsersMeetingList.map(appUser => appUser.id);\n      let nextId = Math.max.apply(Math, list) + 1; // Start to create a new user from scratch\n      // @ts-ignore\n\n      let newUser = {\n        \"id\": nextId,\n        \"name\": this.user.nom,\n        \"isActive\": true\n      };\n      console.log(newUser); // créer le lien avec le service\n\n      this.service.createUser(newUser).subscribe(); // faire appel à la liste des utilisateurs en cours\n\n      this.userlistservice.appUsersMeetingList.push({\n        \"id\": nextId,\n        \"name\": this.nom,\n        \"isParticipant\": false,\n        \"isSpeaking\": 0,\n        \"timeKeeper\": false\n      });\n    }\n\n  }\n\n  NewAppUserComponent.ɵfac = function NewAppUserComponent_Factory(t) {\n    return new (t || NewAppUserComponent)(i0.ɵɵdirectiveInject(i1.Service), i0.ɵɵdirectiveInject(i2.UsersListService));\n  };\n\n  NewAppUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NewAppUserComponent,\n    selectors: [[\"app-new-app-user\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"id\", \"monform\", 3, \"submit\", 4, \"ngIf\"], [\"id\", \"monform\", 3, \"submit\"], [\"monForm\", \"ngForm\"], [\"type\", \"text\", \"name\", \"nom\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n    template: function NewAppUserComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, NewAppUserComponent_form_0_Template, 7, 1, \"form\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.userlistservice.addUserOn == true);\n      }\n    },\n    directives: [i3.NgIf, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel],\n    styles: [\"#monform[_ngcontent-%COMP%]{display:block;width:15%;height:5%;padding:5px;box-sizing:border-box;margin-left:50px;outline-style:none}\"]\n  });\n  return NewAppUserComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}